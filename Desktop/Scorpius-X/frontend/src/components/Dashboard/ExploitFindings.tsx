import {
  Clock,
  Zap as Circuit,
  AlertTriangle,
  ExternalLink,
  Shield,
  Bug,
} from "lucide-react";

const findings = [
  {
    id: 1,
    name: "Timestamp Dependence",
    icon: Clock,
    severity: "high",
    confidence: 94,
    detected: "2m ago",
  },
  {
    id: 2,
    name: "Delegatecall Hijack",
    icon: Circuit,
    severity: "critical",
    confidence: 98,
    detected: "5m ago",
  },
  {
    id: 3,
    name: "Unchecked Call",
    icon: AlertTriangle,
    severity: "medium",
    confidence: 87,
    detected: "12m ago",
  },
];

export const ExploitFindings = () => {
  return (
    <div className="gradient-gray-box rounded-2xl p-6 shadow-subtle border border-gray-600 enhanced-glow h-full relative overflow-hidden">
      {/* Scanning animation */}
      <div className="absolute top-0 right-0 w-full h-1 bg-gradient-to-l from-accent/50 to-transparent data-stream" />

      <div className="flex items-center gap-3 mb-6">
        <Shield className="w-5 h-5 text-accent animate-pulse" />
        <h2 className="text-lg font-semibold text-glow text-accent">
          Simulated Exploit Findings
        </h2>
        <div className="ml-auto flex items-center gap-2">
          <Bug className="w-4 h-4 text-accent" />
          <span className="text-xs text-accent font-mono">SCANNING</span>
        </div>
      </div>

      <div className="space-y-3">
        {findings.map((finding, index) => (
          <div
            key={finding.id}
            className="group relative gradient-gray-card rounded-xl border border-gray-600 hover:border-accent/30 transition-all duration-300 cursor-pointer hologram-effect overflow-hidden"
            style={{ animationDelay: `${index * 0.2}s` }}
          >
            {/* Scanning line effect */}
            <div className="absolute top-0 left-0 w-full h-0.5 bg-gradient-to-r from-transparent via-accent to-transparent group-hover:animate-pulse" />

            <div className="p-4">
              <div className="flex items-center justify-between mb-2">
                <div className="flex items-center gap-3">
                  <div
                    className={`w-8 h-8 rounded-lg flex items-center justify-center border ${
                      finding.severity === "critical"
                        ? "bg-red-500/20 border-red-500/30 pulse-glow"
                        : finding.severity === "high"
                          ? "bg-accent/20 border-accent/30"
                          : "bg-yellow-500/20 border-yellow-500/30"
                    }`}
                  >
                    <finding.icon
                      className={`w-4 h-4 ${
                        finding.severity === "critical"
                          ? "text-red-400"
                          : finding.severity === "high"
                            ? "text-accent"
                            : "text-yellow-400"
                      }`}
                    />
                  </div>
                  <div>
                    <span className="font-medium text-white">
                      {finding.name}
                    </span>
                    <div className="text-xs text-gray-400">
                      {finding.detected}
                    </div>
                  </div>
                </div>

                <div className="flex items-center gap-3">
                  <div className="text-right">
                    <div className="text-xs text-gray-400">Confidence</div>
                    <div className="text-sm font-mono text-accent">
                      {finding.confidence}%
                    </div>
                  </div>
                  <ExternalLink className="w-4 h-4 text-gray-400 group-hover:text-accent transition-colors" />
                </div>
              </div>

              {/* Progress bar for confidence */}
              <div className="w-full bg-gray-800 rounded-full h-1.5 mb-2">
                <div
                  className={`h-1.5 rounded-full transition-all duration-1000 ${
                    finding.severity === "critical"
                      ? "bg-gradient-to-r from-red-500 to-red-400"
                      : finding.severity === "high"
                        ? "bg-gradient-to-r from-accent to-accent/80"
                        : "bg-gradient-to-r from-yellow-500 to-yellow-400"
                  }`}
                  style={{ width: `${finding.confidence}%` }}
                />
              </div>

              <div className="flex justify-between text-xs">
                <span
                  className={`px-2 py-1 rounded text-xs font-mono ${
                    finding.severity === "critical"
                      ? "bg-red-500/20 text-red-400"
                      : finding.severity === "high"
                        ? "bg-accent/20 text-accent"
                        : "bg-yellow-500/20 text-yellow-400"
                  }`}
                >
                  {finding.severity.toUpperCase()}
                </span>
                <span className="text-gray-500 font-mono">
                  #{finding.id.toString().padStart(3, "0")}
                </span>
              </div>
            </div>
          </div>
        ))}
      </div>

      {/* Footer scan info */}
      <div className="mt-4 p-3 gradient-gray-card rounded-lg border border-gray-600">
        <div className="flex items-center justify-between text-xs">
          <span className="text-gray-400">Last Scan:</span>
          <span className="text-accent font-mono">14:23:45 UTC</span>
        </div>
        <div className="flex items-center justify-between text-xs mt-1">
          <span className="text-gray-400">Next Scan:</span>
          <span className="text-accent font-mono animate-pulse">In 30s</span>
        </div>
      </div>
    </div>
  );
};
